C51 COMPILER V9.60.7.0   GETKEY                                                            09/06/2025 13:36:19 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE GETKEY
OBJECT MODULE PLACED IN .\Objects\getkey.obj
COMPILER INVOKED BY: D:\keil5C51\C51\BIN\C51.EXE getkey.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\Listings\getkey.lst) OBJECT(.\Objects\getkey.obj)

line level    source

   1          #include <SN8F5702.H>
   2          #include "getkey.h"
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          sbit key_01 = P0 ^ 2;
   6          sbit key_02 = P0 ^ 7;
   7          sbit key_03 = P1 ^ 3;
   8          sbit key_04 = P1 ^ 4;
   9          sbit key_05 = P2 ^ 0;
  10          sbit key_06 = P0 ^ 6;
  11          sbit key_07 = P0 ^ 1;
  12          sbit key_08 = P0 ^ 0;
  13          sbit key_09 = P0 ^ 5;
  14          uint8_t key_stat = 1;
  15          
  16          volatile uint8_t inkey_number = 0; // 保存按键代号值
  17          volatile uint16_t key_time = 0, last_temp;
  18          
  19          uint8_t key_scan(void)
  20          {
  21   1              if(key_05 == 0 && key_04 == 0)
  22   1                      return (key_reset);
  23   1              if(key_05 == 0 && key_08 == 0)
  24   1                      return (key_clear);
  25   1              if (key_01 == 0)
  26   1                      return (key_air_up); 
  27   1              if (key_02 == 0)
  28   1                      return (key_temp_down);
  29   1              if (key_03 == 0)
  30   1                      return (key_temp_up);
  31   1              if (key_04 == 0)
  32   1                      return (key_ch3);
  33   1              if (key_05 == 0)
  34   1                      return (key_ch1); 
  35   1              if (key_06 == 0)
  36   1                      return (KEY_Switch_handle);
  37   1              if (key_07 == 0)
  38   1                      return (key_ch4);
  39   1              if (key_08 == 0)
  40   1                      return (key_ch2);
  41   1              if (key_09 == 0)
  42   1                      return (key_air_down);
  43   1              return (key_null); 
  44   1      }                               
  45          
  46                  uint8_t key_temp = 0;  //
  47          get_key(void) // 扫描键盘
  48          {
  49   1              key_temp = key_scan(); // 获取哪个键按下
  50   1              switch (key_stat)
  51   1              {
  52   2              case (key_init):
  53   2                      if (key_null != key_temp)
  54   2                              key_stat = key_wobble;
C51 COMPILER V9.60.7.0   GETKEY                                                            09/06/2025 13:36:19 PAGE 2   

  55   2                      break;
  56   2              case (key_wobble):
  57   2                      key_stat = key_press;
  58   2                      break;
  59   2              case (key_press):
  60   2              {
  61   3                      if (key_null != key_temp)
  62   3                      {
  63   4                              inkey_number = key_temp; // 保存健值s
  64   4                              last_temp = key_temp;
  65   4                              key_temp = keydown_ent;  // 确认按按下
  66   4                              key_stat = keylong_stat; // 定位到长键检测
  67   4                      }
  68   3                      else
  69   3                              key_stat = key_period; // 否则定位到按键释放
  70   3              }
  71   2              break;
  72   2              case (keylong_stat):
  73   2              {
  74   3                      if (key_null != key_temp)
  75   3                      {
  76   4                              if (key_time++ > keylong_pepione) // 检测长按键
  77   4                              {
  78   5                                      key_stat = key_long_on; // 定位到
  79   5                                      key_temp = key_long;    // 连击标志
  80   5                                      key_time = 0;
  81   5                              }
  82   4                              else
  83   4                              {
  84   5                                      if (last_temp != key_temp)
  85   5                                              key_time = 0x00, key_stat = key_press;
  86   5                                      key_temp = keydown_ent; // 否则确认按下
  87   5                              }
  88   4                      }
  89   3                      else
  90   3                              key_stat = key_period; // 否则定位到按键释放
  91   3              }
  92   2              break;
  93   2              case (key_long_on): // 按键连发
  94   2              {
  95   3                      if (key_null != key_temp)
  96   3                      {
  97   4                              if (key_time++ > key_continue_period)
  98   4                              {
  99   5                                      key_time = 0;
 100   5                                      key_temp = key_continue;
 101   5                                      key_stat = key_long_on;
 102   5                              }
 103   4                              else
 104   4                                      key_temp = key_long;
 105   4                      }
 106   3                      else
 107   3                              key_stat = key_period;
 108   3              }
 109   2              break;
 110   2              case (key_period): //                确认按键释放
 111   2              {
 112   3                      key_time = 0;
 113   3                      key_stat = key_init;
 114   3                      key_temp = keyup_ent;
 115   3              }
 116   2              break;
C51 COMPILER V9.60.7.0   GETKEY                                                            09/06/2025 13:36:19 PAGE 3   

 117   2              default:
 118   2                      inkey_number = key_null;
 119   2                      break; // 无键按下
 120   2              }
 121   1              return (key_temp);
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    271    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
