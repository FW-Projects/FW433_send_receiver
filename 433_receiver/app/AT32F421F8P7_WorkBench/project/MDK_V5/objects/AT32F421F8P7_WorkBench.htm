<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\objects\AT32F421F8P7_WorkBench.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\objects\AT32F421F8P7_WorkBench.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Sat Sep  6 15:23:26 2025
<BR><P>
<H3>Maximum Stack Usage =        192 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; wk_usart1_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">ADC1_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC1_CMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC1_CMP_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-8064e3.o(.text.BusFault_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[e]">CRM_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[13]">DMA1_Channel3_2_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[14]">DMA1_Channel5_4_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from lto-llvm-8064e3.o(.text.DebugMon_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[c]">ERTC_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[11]">EXINT15_4_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[f]">EXINT1_0_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[10]">EXINT3_2_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-8064e3.o(.text.HardFault_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[24]">I2C1_ERR_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1e]">I2C1_EVT_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[25]">I2C2_ERR_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1f]">I2C2_EVT_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-8064e3.o(.text.MemManage_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-8064e3.o(.text.NMI_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from lto-llvm-8064e3.o(.text.PendSV_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[20]">SPI1_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[21]">SPI2_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from lto-llvm-8064e3.o(.text.SVC_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from lto-llvm-8064e3.o(.text.SysTick_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from lto-llvm-8064e3.o(.text.SystemInit) referenced from startup_at32f421.o(.text)
 <LI><a href="#[1a]">TMR14_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1b]">TMR15_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1c]">TMR16_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[1d]">TMR17_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[16]">TMR1_BRK_OVF_TRG_HALL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[17]">TMR1_CH_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[18]">TMR3_GLOBAL_IRQHandler</a> from lto-llvm-8064e3.o(.text.TMR3_GLOBAL_IRQHandler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[19]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[22]">USART1_IRQHandler</a> from lto-llvm-8064e3.o(.text.USART1_IRQHandler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[23]">USART2_IRQHandler</a> from lto-llvm-8064e3.o(.text.USART2_IRQHandler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-8064e3.o(.text.UsageFault_Handler) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f421.o(.text) referenced from startup_at32f421.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f421.o(.text)
 <LI><a href="#[2c]">asrpro_task</a> from lto-llvm-8064e3.o(.text.asrpro_task) referenced 2 times from lto-llvm-8064e3.o(.text.main)
 <LI><a href="#[2b]">flash_task</a> from lto-llvm-8064e3.o(.text.flash_task) referenced 2 times from lto-llvm-8064e3.o(.text.main)
 <LI><a href="#[2a]">iap_task</a> from lto-llvm-8064e3.o(.text.iap_task) referenced 2 times from lto-llvm-8064e3.o(.text.main)
 <LI><a href="#[2e]">led_task</a> from lto-llvm-8064e3.o(.text.led_task) referenced 2 times from lto-llvm-8064e3.o(.text.main)
 <LI><a href="#[26]">main</a> from lto-llvm-8064e3.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[29]">recevier433_task</a> from lto-llvm-8064e3.o(.text.recevier433_task) referenced 2 times from lto-llvm-8064e3.o(.text.main)
 <LI><a href="#[31]">tmt_create</a> from lto-llvm-8064e3.o(.text.tmt_create) referenced 2 times from lto-llvm-8064e3.o(.text.tmt_init)
 <LI><a href="#[32]">tmt_delete</a> from lto-llvm-8064e3.o(.text.tmt_delete) referenced 2 times from lto-llvm-8064e3.o(.text.tmt_init)
 <LI><a href="#[2f]">tmt_run</a> from lto-llvm-8064e3.o(.text.tmt_run) referenced 2 times from lto-llvm-8064e3.o(.text.tmt_init)
 <LI><a href="#[34]">tmt_run_ctrl</a> from lto-llvm-8064e3.o(.text.tmt_run_ctrl) referenced 2 times from lto-llvm-8064e3.o(.text.tmt_init)
 <LI><a href="#[33]">tmt_time_ctrl</a> from lto-llvm-8064e3.o(.text.tmt_time_ctrl) referenced 2 times from lto-llvm-8064e3.o(.text.tmt_init)
 <LI><a href="#[30]">tmt_update_tick</a> from lto-llvm-8064e3.o(.text.tmt_update_tick) referenced 2 times from lto-llvm-8064e3.o(.text.tmt_init)
 <LI><a href="#[2d]">usart_send_task</a> from lto-llvm-8064e3.o(.text.usart_send_task) referenced 2 times from lto-llvm-8064e3.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[35]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[37]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a0]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a1]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[a2]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel5_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ERTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT15_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXINT1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR14_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR15_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TMR16_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TMR17_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR1_BRK_OVF_TRG_HALL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f421.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a3]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; wk_timebase_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 620 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.TMR3_GLOBAL_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TMR3_GLOBAL_IRQHandler &rArr; tmr_channel_value_get
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_value_set
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_channel_value_get
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_flag_clear
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_data_bit_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART1_IRQHandler</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART2_IRQHandler</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f421.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main &rArr; wk_usart1_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_delay_ms
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FW433_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmt_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_wdt_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_periph_clock_config
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a6]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[42]"></a>wk_timebase_handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.wk_timebase_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wk_timebase_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_increase
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[43]"></a>gpio_input_data_bit_read</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.gpio_input_data_bit_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_input_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>tmr_flag_clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>tmr_channel_value_get</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.tmr_channel_value_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmr_channel_value_get
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[46]"></a>tmr_counter_value_set</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_counter_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_counter_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_GLOBAL_IRQHandler
</UL>

<P><STRONG><a name="[47]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>usart_data_receive</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.usart_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>usart_flag_clear</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
</UL>

<P><STRONG><a name="[57]"></a>wk_system_clock_config</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.wk_system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = wk_system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_auto_step_mode_enable
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>crm_reset</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[80]"></a>crm_clock_source_enable</STRONG> (Thumb, 162 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crm_clock_source_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_clock_source_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[81]"></a>crm_flag_get</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.crm_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[82]"></a>crm_pll_config</STRONG> (Thumb, 486 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.crm_pll_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crm_pll_config
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[83]"></a>crm_ahb_div_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crm_ahb_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_ahb_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[84]"></a>crm_apb2_div_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crm_apb2_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb2_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[85]"></a>crm_apb1_div_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crm_apb1_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_apb1_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[86]"></a>crm_auto_step_mode_enable</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crm_auto_step_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_auto_step_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[87]"></a>crm_sysclk_switch</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crm_sysclk_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crm_sysclk_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[4f]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[6e]"></a>system_core_clock_update</STRONG> (Thumb, 552 bytes, Stack size 48 bytes, lto-llvm-8064e3.o(.text.system_core_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_system_clock_config
</UL>

<P><STRONG><a name="[58]"></a>wk_periph_clock_config</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.wk_periph_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wk_periph_clock_config &rArr; crm_periph_clock_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>crm_periph_clock_enable</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.crm_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_periph_clock_config
</UL>

<P><STRONG><a name="[59]"></a>wk_nvic_config</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.wk_nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wk_nvic_config &rArr; nvic_irq_enable &rArr; NVIC_EncodePriority.124
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>nvic_priority_group_config</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.nvic_priority_group_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nvic_priority_group_config &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[7c]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[7d]"></a>NVIC_EncodePriority</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lto-llvm-8064e3.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[7e]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[65]"></a>nvic_irq_enable</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lto-llvm-8064e3.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nvic_irq_enable &rArr; NVIC_EncodePriority.124
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority.125
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority.124
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping.123
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_nvic_config
</UL>

<P><STRONG><a name="[5a]"></a>wk_timebase_init</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, lto-llvm-8064e3.o(.text.wk_timebase_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = wk_timebase_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clock_source_config
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>wk_gpio_config</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, lto-llvm-8064e3.o(.text.wk_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = wk_gpio_config &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>wk_usart1_init</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, lto-llvm-8064e3.o(.text.wk_usart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = wk_usart1_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_control_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_mux_config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>wk_usart2_init</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.wk_usart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = wk_usart2_init &rArr; usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_control_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_mux_config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>wk_crc_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.wk_crc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wk_crc_init &rArr; crm_periph_clock_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_data_reset
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_reverse_output_data_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_reverse_input_data_set
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_poly_value_set
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_poly_size_set
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_init_data_set
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>wk_wdt_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.wk_wdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = wk_wdt_init &rArr; wdt_reload_value_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_counter_reload
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reload_value_set
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_divider_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_register_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>wk_tmr3_init</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, lto-llvm-8064e3.o(.text.wk_tmr3_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wk_tmr3_init &rArr; gpio_pin_mux_config
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_interrupt_enable
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_counter_enable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_input_channel_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_primary_mode_select
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_sub_sync_mode_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_base_init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_period_buffer_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_clock_source_div_set
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmr_cnt_dir_set
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_mux_config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>tmt_init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>recevier433_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.recevier433_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = recevier433_task &rArr; recevier_handle &rArr; decode_handle &rArr; usart1_send_byte &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recevier_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.main)
</UL>
<P><STRONG><a name="[2a]"></a>iap_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.iap_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iap_task
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_command_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.main)
</UL>
<P><STRONG><a name="[2b]"></a>flash_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.flash_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = flash_task &rArr; FlashProc &rArr; flash_halfword_program &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.main)
</UL>
<P><STRONG><a name="[2c]"></a>asrpro_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.asrpro_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = asrpro_task &rArr; asrpro_Handle &rArr; usart1_send_byte &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asrpro_Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.main)
</UL>
<P><STRONG><a name="[2d]"></a>usart_send_task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_send_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usart_send_task &rArr; usart_send_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_send_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.main)
</UL>
<P><STRONG><a name="[2e]"></a>led_task</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.led_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = led_task &rArr; gpio_bits_set
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_set
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_data_bit_read
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bits_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.main)
</UL>
<P><STRONG><a name="[56]"></a>gpio_bits_reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.gpio_bits_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_task
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
</UL>

<P><STRONG><a name="[62]"></a>FW433_Init</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.FW433_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FW433_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>wk_delay_ms</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.wk_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wk_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_get
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>usart_interrupt_enable</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[6c]"></a>recevier_handle</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.recevier_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = recevier_handle &rArr; decode_handle &rArr; usart1_send_byte &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_handle
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_code_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recevier433_task
</UL>

<P><STRONG><a name="[53]"></a>iap_command_handle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.iap_command_handle))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iap_task
</UL>

<P><STRONG><a name="[3b]"></a>FlashProc</STRONG> (Thumb, 888 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.FlashProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FlashProc &rArr; flash_halfword_program &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wred_halfword
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_task
</UL>

<P><STRONG><a name="[4a]"></a>asrpro_Handle</STRONG> (Thumb, 872 bytes, Stack size 64 bytes, lto-llvm-8064e3.o(.text.asrpro_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = asrpro_Handle &rArr; usart1_send_byte &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_send_byte
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_block_calculate
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_data_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asrpro_task
</UL>

<P><STRONG><a name="[72]"></a>usart_send_handle</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, lto-llvm-8064e3.o(.text.usart_send_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usart_send_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_send_task
</UL>

<P><STRONG><a name="[54]"></a>gpio_output_data_bit_read</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.gpio_output_data_bit_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_output_data_bit_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_task
</UL>

<P><STRONG><a name="[55]"></a>gpio_bits_set</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.gpio_bits_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bits_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_task
</UL>

<P><STRONG><a name="[88]"></a>wk_timebase_increase</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.wk_timebase_increase))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_handler
</UL>

<P><STRONG><a name="[79]"></a>wk_timebase_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.wk_timebase_get))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_delay_ms
</UL>

<P><STRONG><a name="[4e]"></a>crm_clocks_freq_get</STRONG> (Thumb, 610 bytes, Stack size 56 bytes, lto-llvm-8064e3.o(.text.crm_clocks_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_init
</UL>

<P><STRONG><a name="[89]"></a>systick_clock_source_config</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.systick_clock_source_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = systick_clock_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_timebase_init
</UL>

<P><STRONG><a name="[7a]"></a>gpio_default_para_init</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.gpio_default_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gpio_default_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
</UL>

<P><STRONG><a name="[8a]"></a>gpio_pin_mux_config</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.gpio_pin_mux_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_pin_mux_config
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[7b]"></a>gpio_init</STRONG> (Thumb, 230 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_gpio_config
</UL>

<P><STRONG><a name="[71]"></a>usart_init</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, lto-llvm-8064e3.o(.text.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = usart_init &rArr; crm_clocks_freq_get &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[94]"></a>usart_transmitter_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_transmitter_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_transmitter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[95]"></a>usart_receiver_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_receiver_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_receiver_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[96]"></a>usart_parity_selection_config</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_parity_selection_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_parity_selection_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[97]"></a>usart_hardware_flow_control_set</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_hardware_flow_control_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_hardware_flow_control_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[98]"></a>usart_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart2_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_usart1_init
</UL>

<P><STRONG><a name="[8b]"></a>tmr_cnt_dir_set</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_cnt_dir_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_cnt_dir_set
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[8c]"></a>tmr_clock_source_div_set</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_clock_source_div_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_clock_source_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[8d]"></a>tmr_period_buffer_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_period_buffer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_period_buffer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[8e]"></a>tmr_base_init</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.tmr_base_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmr_base_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[8f]"></a>tmr_sub_sync_mode_set</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_sub_sync_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_sub_sync_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[90]"></a>tmr_primary_mode_select</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_primary_mode_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_primary_mode_select
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[91]"></a>tmr_input_channel_init</STRONG> (Thumb, 556 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.tmr_input_channel_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmr_input_channel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[92]"></a>tmr_counter_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.tmr_counter_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tmr_counter_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[93]"></a>tmr_interrupt_enable</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.tmr_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmr_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_tmr3_init
</UL>

<P><STRONG><a name="[73]"></a>crc_init_data_set</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crc_init_data_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crc_init_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
</UL>

<P><STRONG><a name="[74]"></a>crc_poly_size_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crc_poly_size_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crc_poly_size_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
</UL>

<P><STRONG><a name="[75]"></a>crc_poly_value_set</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crc_poly_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crc_poly_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
</UL>

<P><STRONG><a name="[76]"></a>crc_reverse_input_data_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crc_reverse_input_data_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crc_reverse_input_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
</UL>

<P><STRONG><a name="[77]"></a>crc_reverse_output_data_set</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.crc_reverse_output_data_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = crc_reverse_output_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
</UL>

<P><STRONG><a name="[4c]"></a>crc_data_reset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.crc_data_reset))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_handle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asrpro_Handle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_crc_init
</UL>

<P><STRONG><a name="[99]"></a>wdt_register_write_enable</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.wdt_register_write_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = wdt_register_write_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_wdt_init
</UL>

<P><STRONG><a name="[9a]"></a>wdt_divider_set</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.wdt_divider_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = wdt_divider_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_wdt_init
</UL>

<P><STRONG><a name="[9b]"></a>wdt_reload_value_set</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.wdt_reload_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = wdt_reload_value_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_wdt_init
</UL>

<P><STRONG><a name="[9c]"></a>wdt_counter_reload</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.wdt_counter_reload))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wk_wdt_init
</UL>

<P><STRONG><a name="[70]"></a>usart_data_transmit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.usart_data_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_send_byte
</UL>

<P><STRONG><a name="[6f]"></a>usart_flag_get</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_send_byte
</UL>

<P><STRONG><a name="[52]"></a>flash_operation_status_get</STRONG> (Thumb, 104 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.flash_operation_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>

<P><STRONG><a name="[51]"></a>flash_operation_wait_for</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.flash_operation_wait_for))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_halfword_program
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_sector_erase
</UL>

<P><STRONG><a name="[3e]"></a>flash_unlock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[41]"></a>flash_lock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.flash_lock))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[3f]"></a>flash_sector_erase</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.flash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_sector_erase &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[40]"></a>flash_halfword_program</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.flash_halfword_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = flash_halfword_program &rArr; flash_operation_wait_for &rArr; flash_operation_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_wait_for
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[4b]"></a>crc_block_calculate</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.crc_block_calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc_block_calculate
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_handle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asrpro_Handle
</UL>

<P><STRONG><a name="[66]"></a>__NVIC_GetPriorityGrouping.123</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-8064e3.o(.text.__NVIC_GetPriorityGrouping.123))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[67]"></a>NVIC_EncodePriority.124</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lto-llvm-8064e3.o(.text.NVIC_EncodePriority.124))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_EncodePriority.124
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[68]"></a>__NVIC_SetPriority.125</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.__NVIC_SetPriority.125))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority.125
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[69]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[6b]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
</UL>

<P><STRONG><a name="[2f]"></a>tmt_run</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.tmt_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tmt_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[30]"></a>tmt_update_tick</STRONG> (Thumb, 106 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.tmt_update_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tmt_update_tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[31]"></a>tmt_create</STRONG> (Thumb, 136 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.tmt_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[32]"></a>tmt_delete</STRONG> (Thumb, 300 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.tmt_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[33]"></a>tmt_time_ctrl</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.tmt_time_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_time_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[34]"></a>tmt_run_ctrl</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, lto-llvm-8064e3.o(.text.tmt_run_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tmt_run_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-8064e3.o(.text.tmt_init)
</UL>
<P><STRONG><a name="[3d]"></a>flash_wred_halfword</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lto-llvm-8064e3.o(.text.flash_wred_halfword))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_wred_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_check_len
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[3c]"></a>data_check_len</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lto-llvm-8064e3.o(.text.data_check_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = data_check_len &rArr; flash_wred_halfword
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wred_halfword
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashProc
</UL>

<P><STRONG><a name="[6d]"></a>right_code_handle</STRONG> (Thumb, 106 bytes, Stack size 4 bytes, lto-llvm-8064e3.o(.text.right_code_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = right_code_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recevier_handle
</UL>

<P><STRONG><a name="[50]"></a>decode_handle</STRONG> (Thumb, 660 bytes, Stack size 64 bytes, lto-llvm-8064e3.o(.text.decode_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = decode_handle &rArr; usart1_send_byte &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart1_send_byte
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_block_calculate
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_data_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recevier_handle
</UL>

<P><STRONG><a name="[4d]"></a>usart1_send_byte</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lto-llvm-8064e3.o(.text.usart1_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usart1_send_byte &rArr; usart_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_handle
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asrpro_Handle
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
